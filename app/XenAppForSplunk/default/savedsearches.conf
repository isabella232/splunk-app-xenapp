########
#
# XenApp Lookup Generation
#
########

[Rebuild Zone Farm Lookup]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
cron_schedule = 0 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = `xenapp_index` `xa_server_sourcetype` | inputlookup xa_zone_farm.csv append=t  | stats count by ServerName, ZoneName, FarmName | table ServerName, ZoneName, FarmName | outputlookup xa_zone_farm.csv
vsid = gx88m3ac

[Update Process Table]
search = `win_index` sourcetype="WMI:ProcessDetails"  Product!="" | inputlookup process_table append=t | rename Product as Application | table Application process_name Path | dedup Application process_name | outputlookup process_table
cron_schedule = 45 3 * * *
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline

########
#
# UserName Experience Dashboard Alerts
#
########

[UserName EXP - High ICA Session Latency]
action.email.reportServerEnabled = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 * * * *
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_view = flashtimeline
search = `xenapp_index` `xa_ica` UserNameName="*" UserNameName!="_Server Total" | stats Max(LatencySessionAverage) as LatencySessionAverage by host UserNameName _time | sort - LatencySessionAverage | dedup UserNameName host | `usrexp_icalatency` | eval alert_name="High ICA Session Latency" | eval Value=LatencySessionAverage | where usrexp<3  | collect `xenapp_alerts`

[UserName EXP - RDP Session]
action.email.reportServerEnabled = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 10 * * * *
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_view = flashtimeline
search = `xenapp_index` `xa_sessions_sourcetype` Protocol=Rdp | dedup SessionUID | eval alert_name="RDPSession" | eval Value="RDPSession" |  eval usrexp=3 | table LogOnTime host Value alert_name UserName usrexp | collect `xenapp_alerts`

[UserName EXP - CPU Consumption Cirtical]
action.email.reportServerEnabled = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 5 * * * *
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_view = flashtimeline
search = `perfmon_index` `perfmon_cpu` counter="% Processor Time" | bin _time span=5m | stats avg(Value) as Value by host _time | bin _time span=1h | stats max(Value) as MaxCPUAvg by host _time | eval alert_name ="High CPU Consumption" | `usrexp_cpu` | eval UserName="NotAvailable" | where usrexp<3 | collect `xenapp_alerts`  

[UserName EXP - Disk Space Cirtical]
action.email.reportServerEnabled = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 45 * * * *
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_view = flashtimeline
search = `perfmon_logdisk` counter="Free Megabytes" `LOWDISKMB` | bin _time span=5m | stats avg(Value) as Value by host _time | bin _time span=1h | stats max(Value) as Value by host _time  | eval UserName="NotAvailable" | `usrexp_disk`| where usrexp<3 | eval alert_name ="Low Disk Space" | collect `xenapp_alerts`

[UserName EXP - Available Memory Cirtical]
action.email.reportServerEnabled = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 55 * * * *
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_view = flashtimeline
search = `perfmon_mem` object="Memory" Memory counter="Available Bytes" | eval Value=Value/1024/1024 | bin _time span=5m | stats avg(Value) as Value by host _time | bin _time span=1h | stats max(Value) as Value by host _time | eval UserName="NotAvailable" | `usrexp_mem`| where usrexp<3 | eval alert_name ="Low Available Memory" | collect `xenapp_alerts`

[UserName EXP - High Disk IO]
action.email.reportServerEnabled = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 55 * * * *
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_view = flashtimeline
search = `perfmon_logdisk` counter="Disk Reads/Sec" OR counter="Disk Writes/Sec" | bin _time span=5m | stats avg(Value) as Value by host _time | bin _time span=1h | stats max(Value) as Value by host _time | eval UserName="NotAvailable" | `usrexp_io`| where usrexp<3 | eval alert_name ="High Disk I/O" | collect `xenapp_alerts`

[UserName EXP - Application Crash or Hang]
action.email.reportServerEnabled = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 55 * * * *
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_view = flashtimeline
search = `win_index` Type=Error EventCode>999 EventCode<1012 | bin _time span=15m | stats count by EventCode SourceName host _time | rename SourceName as Value | Table _time host Value  | eval UserName="NotAvailable" | eval alert_name ="Application Crash or Hang" | `usrexp_crash` | collect `xenapp_alerts`
